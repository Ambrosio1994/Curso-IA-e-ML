{"cells":[{"cell_type":"markdown","metadata":{"id":"Sl9VAJICFgnG"},"source":["<a href=\"https://colab.research.google.com/github/https-deeplearning-ai/tensorflow-1-public/blob/master/C3/W1/ungraded_labs/C3_W1_Lab_1_tokenize_basic.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"]},{"cell_type":"markdown","metadata":{"id":"rL-LzAqpoGLC"},"source":["# Noções básicas do tokenizer\n","\n","Na maioria das tarefas de PNL, o passo inicial na preparação dos seus dados é extrair um vocabulário de palavras do seu *corpus* (ou seja, textos de entrada). Você precisará definir como representar os textos em representações numéricas que podem ser usadas para treinar uma rede neural. Essas representações são chamadas de *tokens* e Tensorflow e Keras facilitam sua geração usando suas APIs. Você verá como fazer isso nas próximas células."]},{"cell_type":"markdown","metadata":{"id":"-nt3uR9TPrUt"},"source":["## Gerando o vocabulário\n","\n","Neste caderno, você verá primeiro como fornecer um dicionário de consulta para cada palavra. O código abaixo pega uma lista de frases, depois pega cada palavra dessas frases e atribui-a a um número inteiro. Isso é feito usando o método [fit_on_texts()](https://www.tensorflow.org/api_docs/python/tf/keras/preprocessing/text/Tokenizer#fit_on_texts) e você pode obter o resultado olhando no `word_index `propriedade. Palavras mais frequentes têm índice mais baixo."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zaCMcjMQifQc"},"outputs":[],"source":["from tensorflow.keras.preprocessing.text import Tokenizer\n","\n","# Definir sentenças de entrada\n","sentences = [\n","    'i love my dog',\n","    'I, love my cat'\n","    ]\n","\n","# Inicializa a classe Tokenizer\n","tokenizer = Tokenizer(num_words = 100)\n","\n","# Gere índices para cada palavra do corpus\n","tokenizer.fit_on_texts(sentences)\n","\n","# Obtenha os índices e imprima-os\n","word_index = tokenizer.word_index\n","print(word_index)"]},{"cell_type":"markdown","metadata":{"id":"uTPWesNaRdX2"},"source":["O parâmetro `num_words` usado no inicializador especifica o número máximo de palavras menos um (com base na frequência) a serem mantidas ao gerar sequências. Você verá isso em um exercício posterior. Por enquanto, o importante a notar é que isso não afeta a forma como o dicionário `word_index` é gerado. Você pode tentar passar `1` em vez de `100` como mostrado na próxima célula e você chegará ao mesmo `word_index`.\n","\n","Observe também que, por padrão, toda pontuação é ignorada e as palavras são convertidas para minúsculas. Você pode substituir esses comportamentos modificando os argumentos `filters` e `lower` da classe `Tokenizer` conforme descrito [aqui](https://www.tensorflow.org/api_docs/python/tf/keras/preprocessing/text/ Tokenizer#argumentos). Você pode tentar modificá-los na próxima célula abaixo e comparar a saída com a gerada acima."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"VX1A1pDNoVKm"},"outputs":[],"source":["# Define input sentences\n","sentences = [\n","    'i love my dog',\n","    'I, love my cat',\n","    'You love my dog!'\n","]\n","\n","# Initialize the Tokenizer class\n","tokenizer = Tokenizer(num_words = 1)\n","\n","# Generate indices for each word in the corpus\n","tokenizer.fit_on_texts(sentences)\n","\n","# Get the indices and print it\n","word_index = tokenizer.word_index\n","print(word_index)"]},{"cell_type":"markdown","metadata":{"id":"c9LFfwBffDaj"},"source":["That concludes this short exercise on tokenizing input texts!"]}],"metadata":{"colab":{"private_outputs":true,"provenance":[{"file_id":"https://github.com/https-deeplearning-ai/tensorflow-1-public/blob/master/C3/W1/ungraded_labs/C3_W1_Lab_1_tokenize_basic.ipynb","timestamp":1713627009991},{"file_id":"https://github.com/https-deeplearning-ai/tensorflow-1-public/blob/adding_C3/C3/W1/ungraded_labs/C3_W1_Lab_1_tokenize_basic.ipynb","timestamp":1642431620601}]},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.4"}},"nbformat":4,"nbformat_minor":0}